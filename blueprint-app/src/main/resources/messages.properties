policyTypes=Policy builder options are linked to policy types, to help guide the design process. Select a policy type below to begin building a policy from scratch.
loadPolicy=Load a policy from the database to edit the existing policy or use it as a template.
importPolicy=Import a policy from JSON format to continue building a previous design.
baseStatements=Base statements are the building blocks of a policy. They can be configured with arguments in order to allow or disallow particular conditions when the policy evaluates. The panel below displays information about each base statement available for the selected policy type.
policyClauses=A policy consists of one or more clauses. For a policy to evaluate to true, at least one clause must evaluate to true. Each clause consists of one or more configured statements, all of which must evaluate to true for the clause to evaluate to true.
configuredStatements=Add statements to a policy clause using the dropdown at right. Information about each base statement is available in the panel at left. Some statements may have arguments that must be configured for the policy to be valid.
negation=Some base statements can be negated, which flips the logic of their evaluation in a policy. Instead of allowing particular conditions, a negated base statement will reject those conditions. This gives additional flexibility when crafting a policy to tailor it to specific use cases.
savePolicy=Please provide a policy name to save your policy to the database for future use. If a policy with that name already exists and you are the author, the policy will be updated.
rego=This panel contains the content of the generated Rego policy. Note that it does not contain a "package" line at the top of the file, which may need to be added to finalize the policy.
policyModel=This panel contains the policy model that is created by the policy builder and used to generate the Rego policy. This model can be copied and imported into the policy builder to resume the design process at some point in the future.
